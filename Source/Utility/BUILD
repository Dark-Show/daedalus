package(
    default_visibility = ["//visibility:public"],
)

cc_library(
    name = "Utility",
    hdrs = [
        "AtomicPrimitives.h",
        "AuxFunc.h",
        "CRC.h",
        "Cond.h",
        "DataSink.h",
        "Endian.h",
        "FastMemcpy.h",
        "Functor.h",
        "GlobalPreferences.h",
        "Hash.h",
        "MemoryHeap.h",
        "MemoryPool.h",
        "Mutex.h",
        "Preferences.h",
        "PrintOpCode.h",
        "Profiler.h",
        "ROMFile.h",
        "ROMFileCache.h",
        "ROMFileCompressed.h",
        "ROMFileMemory.h",
        "ROMFileUncompressed.h",
        "RefCounted.h",
        "RomPreferences.h",
        "Singleton.h",
        "SpinLock.h",
        "Stream.h",
        "String.h",
        "StringUtil.h",
        "Synchroniser.h",
        "Thread.h",
        "Timer.h",
        "Timing.h",
        "Translate.h",
        "ZlibWrapper.h",
    ],
    deps = [
        "//:stdafx",
        "//third_party/zlib",
        "//third_party/zlib/contrib/minizip",
        "//Config",
        "//Debug:DebugConsole",
        "//Math",
        "//System",
    ],
)

cc_library(
    name = "UtilityCpp",
    srcs = [
        "CRC.cpp",
        "DataSink.cpp",
        "FastMemcpy.cpp",
        "Hash.cpp",
        "MemoryHeap.cpp",
        "MemoryPool.cpp",
        "Preferences.cpp",
        "PrintOpCode.cpp",
        "Profiler.cpp",
        "ROMFile.cpp",
        "ROMFileCache.cpp",
        "ROMFileCompressed.cpp",
        "ROMFileMemory.cpp",
        "ROMFileUncompressed.cpp",
        "Stream.cpp",
        "StringUtil.cpp",
        "Synchroniser.cpp",
        "Timer.cpp",
        "Translate.cpp",
        "ZLibWrapper.cpp",
    ],
    deps = [
        ":IniFile",
        ":Utility",
        "//third_party/zlib/contrib/minizip",
        "//third_party/gtest",
        "//:stdafx",
        "//Config",
        "//Core",
        "//Input",
        "//Interface",
        "//Math",
        "//OSHLE",
    ],
)

cc_library(
    name = "IniFile",
    srcs = ["IniFile.cpp"],
    hdrs = ["IniFile.h"],
    deps = [
        "//:stdafx",
        "@com_google_absl//absl/strings",
    ],
)

cc_test(
    name = "IniFile_test",
    size = "small",
    srcs = [
        "IniFile_test.cpp",
    ],
    visibility = ["//visibility:private"],
    deps = [
        ":IniFile",
        "@com_google_googletest//:gtest_main",
    ],
)
